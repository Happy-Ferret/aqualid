import os

from aql_linker import AqlBuildTool

from setup_settings import  UNIX_SCRIPT_PATH, \
                            WINDOWS_SCRIPT_PATH, \
                            UNIX_SCRIPT, \
                            WINDOWS_SCRIPT, \
                            MANIFEST, \
                            AQL_MODULE_PATH, \
                            SETUP_SCRIPT

#//===========================================================================//

src_dir = os.path.abspath('../aql')
tool_dir = os.path.abspath('../tools')

SetBuildDir('output')
options.build_dir_name = ''

src_files = FindFiles( src_dir, '*.py', exclude_mask = "__init__.py" )

aql_tool = AddTool( AqlBuildTool )

pre_files = aql_tool.Preprocess( src_files )
linked_file = aql_tool.Link( pre_files, target = "aql.py" )

Alias('link', linked_file, "Merge aql source files into one Python script.")
Default( linked_file )

#//-------------------------------------------------------//

install_dir = options.build_dir.get() + '/setup/'
module_dir = install_dir + AQL_MODULE_PATH

mod = tools.CopyFileAs( linked_file, target = module_dir + '/__init__.py' )

tool_files = FindFiles( tool_dir, '*.py' )
aql_tools = tools.CopyFiles( tool_files, target = module_dir + '/tools' )
readme = tools.CopyFileAs( '../README.md', target = install_dir + '/README.txt' )

manifest = tools.WriteFile(     MANIFEST,       target = install_dir + "MANIFEST.in" )
win_script = tools.WriteFile(   WINDOWS_SCRIPT, target = install_dir + WINDOWS_SCRIPT_PATH )
unix_script = tools.WriteFile(  UNIX_SCRIPT,    target = install_dir + UNIX_SCRIPT_PATH )
setup_script = tools.WriteFile( SETUP_SCRIPT,   target = install_dir  + "setup.py" )

sdist = tools.CreateDist( setup_script, target = 'install', command = "sdist", formats = "zip,bztar" )
wdist = tools.CreateDist( setup_script, target = 'install', command = "bdist", formats = "msi,wininst" )
rpm_dist = tools.CreateDist( setup_script, target = 'install', command = "bdist", formats = "rpm" )

Depends( [sdist, wdist ], [ mod, aql_tools, unix_script, win_script, manifest, readme ] )
Depends( [wdist, rpm_dist], sdist )

Alias('dist', sdist, "Build source distributions." )
Alias('wdist', wdist, "Build Windows distributions." )
Alias('rpm', wdist, "Build RPM distribution." )
